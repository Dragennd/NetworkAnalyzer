<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Use this template for borders that have a uniform corner radius-->
    <Style TargetType="Border" x:Key="RoundedBorder">
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <!--Template used for the buttons on the main menu-->
    <Style TargetType="Button" x:Key="MenuButtonTemplate">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MenuTextBrush}"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource RoundedBorder}" Background="{TemplateBinding Background}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource IsMouseOverBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Template used for buttons in the application content-->
    <Style TargetType="Button" x:Key="ContentButtonTemplate">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource RoundedBorder}" Background="{TemplateBinding Background}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource IsMouseOverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Template used for the menu buttons when they are clicked on-->
    <Style TargetType="Button" x:Key="SelectedButtonTemplate">
        <Setter Property="Background" Value="{DynamicResource SelectedBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Margin" Value="5,5,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource RoundedBorder}" Background="{TemplateBinding Background}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template used for the buttons in DataGrids-->
    <Style TargetType="Button" x:Key="DGButtonTemplate">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Margin" Value="6,3,6,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource RoundedBorder}" Background="{TemplateBinding Background}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="ContentTemplate">
        <Setter Property="Background" Value="{DynamicResource ContentBrush}"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style TargetType="Border" x:Key="ContentHeaderTemplate">
        <Setter Property="Background" Value="{DynamicResource ContentBrush}"/>
        <Setter Property="CornerRadius" Value="5,5,0,0"/>
    </Style>

    <Style TargetType="Border" x:Key="MenuTemplate">
        <Setter Property="Background" Value="{DynamicResource MainWindowMenu}"/>
        <Setter Property="CornerRadius" Value="0,5,0,5"/>
    </Style>

    <Style TargetType="Border" x:Key="TopBarTemplate">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CornerRadius" Value="5,5,0,0"/>
    </Style>

    <Style TargetType="Border" x:Key="MainBackgroundTemplate">
        <Setter Property="Background" Value="{DynamicResource MainWindowBackground}"/>
        <Setter Property="CornerRadius" Value="5,5,5,7"/>
    </Style>

    <Style TargetType="TextBox" x:Key="InputTextBoxTemplateWithErrorHandling">
        <Setter Property="Margin" Value="5,4,5,4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTipService.ToolTip">
                    <Setter.Value>
                        <ToolTip
                            DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}"
                            Placement="Right"
                            HasDropShadow="True"
                            Background="{DynamicResource IsMouseOverBrush}"
                            Foreground="{DynamicResource TextBrush}"
                            VerticalOffset="-4"
                            HorizontalOffset="5">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock
                                    Style="{DynamicResource AssetFontTemplate}"
                                    Width="25"
                                    Height="25"
                                    Margin="0,0,5,0"
                                    Foreground="Red"
                                    FontSize="26"
                                    Text="&#xE783;"/>
                                <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding Path=(Validation.Errors)[0].ErrorContent}"/>
                            </StackPanel>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="InputTextBoxTemplateWithoutErrorHandling">
        <Setter Property="Margin" Value="5,4,5,4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="ToolTip" x:Key="InfoToolTip">
        <Setter Property="Placement" Value="Top"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource IsMouseOverBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image
                            Source="\Images\question.png"
                            Width="25"
                            Height="25"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="0,0,5,0"/>
                        <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="DisplayTextBoxTemplate">
        <Setter Property="Margin" Value="5,4,5,4"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="DisplayTextBlockTemplate">
        <Setter Property="Margin" Value="5,4,5,4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Label" x:Key="HeaderLabelTemplate">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="AssetFontTemplate">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>